{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js"],"names":["Contact","props","state","name","email","emailReal","message","handleChange","bind","handleSubmit","encode","data","Object","keys","map","key","encodeURIComponent","join","e","preventDefault","this","b","document","getElementById","disabled","value","style","transition","backgroundColor","theme","color","brand","primaryLight","borderColor","fetch","config","contactPostAddress","method","headers","body","then","rawResponse","json","response","console","log","result","navigate","error","alert","catch","setState","target","render","query","queryResults","site","siteMetadata","primary","primaryDark","action","onSubmit","data-netlify","type","onChange","display","required","id","React","Component","ContactPage","Fragment","Article","Headline","title","Seo","pageTitle"],"mappings":"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","file":"component---src-pages-contact-js-11f74dffd0069bc02acb.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\nimport React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nimport config from \"../../../content/meta/config\";\nimport theme from \"../../theme/theme.yaml\";\n\nclass Contact extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: \"\",\n      email: \"\", // honeypot\n      emailReal: \"\",\n      message: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  encode(data) {\n    return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\");\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.email != \"\") return // honeypot\n\n    const b = document.getElementById(\"submitButton\")\n    b.disabled = true\n    b.value = \"Sending...\"\n    b.style.transition = \"200ms ease-in-out\"\n    b.style.backgroundColor = theme.color.brand.primaryLight\n    b.style.borderColor = theme.color.brand.primaryLight\n    b.style.color = \"#666\"\n\n    fetch(config.contactPostAddress, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: this.encode({ \"form-name\": \"contact\", ...this.state })\n    })\n      .then(function(rawResponse) {\n        return rawResponse.json();\n      })\n      .then(function(response) {\n        console.log(response)\n        if (response.result == 'success') {\n          console.log(\"Form submission success\");\n          navigate(\"/success\");\n        } else {\n          console.error(response);\n          alert(\"Server responded with error! Sorry about this.\")\n        }\n      })\n      .catch(error => {\n        console.error(error);\n        alert(\"Unable to deliver. Is your internet connection down?\")\n      });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <StaticQuery\n      query={graphql`\n        query ContactQuery {\n          site {\n            siteMetadata {\n              contactPostAddress\n            }\n          }\n        }\n      `}\n      render={ queryResults => {\n\n        const contactPostAddress = queryResults.site.siteMetadata.contactPostAddress\n\n        return (\n          <>\n            <div className=\"form\">\n              <form\n                name=\"contact\"\n                method=\"post\"\n                action={contactPostAddress}\n                onSubmit={this.handleSubmit}\n                data-netlify=\"true\"\n              >\n                <label className=\"formItem\" >\n                  Name (optional):<br/>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <br/><br/>\n                <label className=\"formItem\" >\n                  E-mail (optional):<br/>\n                  <input\n                    type=\"email\"\n                    name=\"emailReal\"\n                    value={this.state.emailReal}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <br/><br/>\n                <input\n                  type=\"email\"\n                  name=\"email\" // actually honeypot\n                  value={this.state.email}\n                  onChange={this.handleChange}\n                  style={{display: \"none\"}}\n                />\n                <label className=\"formItem\" >\n                  Message:<br/>\n                  <textarea\n                    name=\"message\"\n                    required={true}\n                    value={this.state.message}\n                    onChange={this.handleChange}\n                  />\n                </label>\n                <br/><br/>\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  id=\"submitButton\"\n                  className=\"formItem\" \n                />\n                {contactPostAddress === \"\" && (\n                  <h1>Undefined contactPostAddress!</h1>\n                )}\n              </form>\n\n              {/* --- STYLES --- */}\n              <style jsx>{`\n                .formItem input,textarea {\n                  width: 100%;\n                  border-radius: 5px;\n                  border-width: 2px;\n                  font-family: Open Sans;\n                  font-weight: 400;\n                  font-size: 1em;\n                }\n                .formItem input {\n                  height: 30px;\n                  max-width: 300px;\n                }\n                .formItem textarea {\n                  height: 100px;\n                  max-width: 600px;\n                }\n                #submitButton {\n                  color: white;\n                  height: auto;\n                  font-family: Open Sans;\n                  font-size: 1.2em;\n                  font-weight: 400;\n                  padding: 0.5em 3em;\n                  border-radius: 5px;\n                  background: ${theme.color.brand.primary};\n                  border: 1px solid ${theme.color.brand.primary};\n                }\n                #submitButton:hover {\n                  background: ${theme.color.brand.primaryDark};\n                  cursor: pointer;\n                }\n              `}</style>\n            </div>\n          </>\n        )\n      }}\n      />\n    )\n  }\n};\n\nexport default Contact;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport theme from \"../theme/theme.yaml\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Contact\";\nimport Headline from \"../components/Article/Headline\";\nimport Seo from \"../components/Seo\";\n\nconst ContactPage = props => {\n\n  return (\n    <React.Fragment>\n        <Article theme={theme}>\n          <header>\n            <Headline title=\"Contact\" theme={theme} />\n          </header>\n          <Contact theme={theme} />\n        </Article>\n      <Seo pageTitle=\"Contact\"/>\n    </React.Fragment>\n  );\n};\n\nContactPage.propTypes = {\n};\n\nexport default ContactPage;\n"],"sourceRoot":""}